/******************************************************************************************
Author: Peter Forgacs <peter.forgacs3@gmail.com>
Date: 2015
Description:	The Application_Controller class controls the main workflow of the program.
				It will handle input / multiple files / MPI in the future.
				This is the class that gets called by main.cpp to start the test.
*******************************************************************************************/
#include "Application_Controller.h"

// Constructor setting the argument vector to a data member
Application_Controller::Application_Controller(char** argv, int argc){
    /*
        Controls the main workflow of the program.
        As of now it creates a GSEA object and then runs the fdr test using data generated by the GSEA
        Checks if correct argument has been given
    */
    if (argc == 4){
        GSEA main_test = run_gsea(argv);
	run_fdr(main_test);
    } else {
        cout << "Invalid Arguments! Use this format ./GSEA Database.txt Population.txt Sample.txt" << endl;
    }

}


GSEA Application_Controller::run_gsea(char** argv) {
    /*
            Creates a GSEA object.
            The GSEA handles and checks the input files.
            With the provided values it generates the reults into the result global variable.
            For each category the subset of the population and the  database category gets stored in the population success global
    */

    char* db = argv[1];
    char* pop = argv[2];
    char* sample = argv[3];

    // Read in files and get population success rates
    GSEA main_test(db, pop, sample);
    return main_test;
}

void Application_Controller::run_fdr(GSEA test) {
    /*
            Starts the process of the FDR part of the test.
            It Seeds the random number generator and creates a Thread controller object that handles the process onward.
    */
    // Random number seed
    srand(time(0));
    // Launch Threads
    Thread_Controller testing_handler(test, 100);
}
