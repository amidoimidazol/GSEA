/******************************************************************************************
Author: Peter Forgacs <peter.forgacs3@gmail.com>
Date: 2015
Description:	The Thread_Controller class handles the FDR object creation based on the data that was generated by GSEA.
				It handles the control of the random sample generation.
				Creation of FDR objects.
				Creation of threads for the FDR objects.
******************************************************************************************/
#pragma once
#include "GSEA.h"
#include <thread>
#include "Random_Sample.h"
#include "FDR.h"
#include <algorithm>

class Thread_Controller
{
public:
	//----Methods----//
	//----Constructor: Checks for the hardware specifications and based on that launches FDR related steps----//
	Thread_Controller(GSEA& main_test_, int repetition_number_);

private:
	//----Data members----//
	int repetition_number;	// Number of repetitions needed in FDR test
	int mod_rep;			
	int obj_rep_num;		// Number of repetitions each thread need to do

	int hardware_threads;
	int num_threads;		// Number of active threads

	int state;				// Multi(0) or single(1) thread
	GSEA main_test;			
	vector<R_sample> Rsample_v;	// Random sample container

	//----Methods----//
	void single_thread_fdr(){};
	void multi_thread_fdr();
		// Creates random samples
		vector<R_sample> r_sample_factory();
};
